{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst config = {\n  apiKey: \"AIzaSyARsRhlakmLrPjyD0MBNDo0k8g9RnxLcBk\",\n  authDomain: \"dangold-8c6de.firebaseapp.com\",\n  databaseURL: \"https://dangold-8c6de.firebaseio.com\",\n  projectId: \"dangold-8c6de\",\n  storageBucket: \"dangold-8c6de.appspot.com\",\n  messagingSenderId: \"65364318642\",\n  appId: \"1:65364318642:web:76895ace7334269c93ecab\",\n  measurementId: \"G-27G1Y6KHRN\"\n};\nexport const CreateUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`user/${user.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exist) {\n    const {\n      DIsplayName,\n      email\n    } = userAuth;\n    const CreateAt = new date();\n\n    try {\n      await userRef.set({\n        DIsplayName,\n        email,\n        CreateAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error message', error.mesage);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/Dangolden/Desktop/crown/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","CreateUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","user","uid","snapShot","get","exist","DIsplayName","email","CreateAt","date","set","error","console","log","mesage","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AASC,MAAMC,MAAM,GAAI;AACTC,EAAAA,MAAM,EAAE,yCADC;AAETC,EAAAA,UAAU,EAAE,+BAFH;AAGTC,EAAAA,WAAW,EAAE,sCAHJ;AAITC,EAAAA,SAAS,EAAE,eAJF;AAKTC,EAAAA,aAAa,EAAE,2BALN;AAMTC,EAAAA,iBAAiB,EAAE,aANV;AAOTC,EAAAA,KAAK,EAAE,0CAPE;AAQTC,EAAAA,aAAa,EAAE;AARN,CAAhB;AAYD,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAkC;AACzE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,QAAOC,IAAI,CAACC,GAAI,EAA/B,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAML,OAAO,CAACM,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,KAAb,EAAmB;AACjB,UAAM;AAACC,MAAAA,WAAD;AAAaC,MAAAA;AAAb,QAAsBX,QAA5B;AACD,UAAMY,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;;AAEC,QAAG;AACD,YAAMX,OAAO,CAACY,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,QAHgB;AAIhB,WAAGX;AAJa,OAAZ,CAAN;AAQD,KATD,CASC,OAAMc,KAAN,EAAY;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAAK,CAACG,MAAnC;AACK;AAEF;;AAEH,SAAOhB,OAAP;AACC,CA1BM;AA4BPb,QAAQ,CAAC8B,aAAT,CAAuB7B,MAAvB;AAGA,OAAO,MAAM8B,IAAI,GAAG/B,QAAQ,CAAC+B,IAAT,EAAb;AACP,OAAO,MAAMjB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMkB,QAAQ,GAAG,IAAIhC,QAAQ,CAAC+B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAKL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA9B;AAEP,eAAehC,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n const config =  {\r\n        apiKey: \"AIzaSyARsRhlakmLrPjyD0MBNDo0k8g9RnxLcBk\",\r\n        authDomain: \"dangold-8c6de.firebaseapp.com\",\r\n        databaseURL: \"https://dangold-8c6de.firebaseio.com\",\r\n        projectId: \"dangold-8c6de\",\r\n        storageBucket: \"dangold-8c6de.appspot.com\",\r\n        messagingSenderId: \"65364318642\",\r\n        appId: \"1:65364318642:web:76895ace7334269c93ecab\",\r\n        measurementId: \"G-27G1Y6KHRN\"\r\n      };  \r\n      \r\n\r\nexport const CreateUserProfileDocument = async (userAuth, additionalData)=>{\r\n  if (!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`user/${user.uid}`);\r\n  const snapShot = await userRef.get();\r\n\r\n  if(!snapShot.exist){\r\n    const {DIsplayName,email} = userAuth;\r\n   const CreateAt = new date();\r\n\r\n    try{\r\n      await userRef.set({\r\n        DIsplayName,\r\n        email,\r\n        CreateAt,\r\n        ...additionalData \r\n      });  \r\n\r\n\r\n    }catch(error){\r\nconsole.log('error message', error.mesage);\r\n    }\r\n\r\n  }\r\n\r\nreturn userRef;\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({prompt:'select_account'});\r\n\r\nexport const signInWithGoogle = ()=> auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}