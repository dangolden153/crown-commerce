{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst config = {\n  apiKey: \"AIzaSyARsRhlakmLrPjyD0MBNDo0k8g9RnxLcBk\",\n  authDomain: \"dangold-8c6de.firebaseapp.com\",\n  databaseURL: \"https://dangold-8c6de.firebaseio.com\",\n  projectId: \"dangold-8c6de\",\n  storageBucket: \"dangold-8c6de.appspot.com\",\n  messagingSenderId: \"65364318642\",\n  appId: \"1:65364318642:web:76895ace7334269c93ecab\",\n  measurementId: \"G-27G1Y6KHRN\"\n};\nexport const UserprofileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc('user/323rvdvfxtr');\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      DisplayName,\n      email\n    } = userAuth;\n    const {\n      CreatedAt\n    } = new Date();\n\n    try {\n      await userRef.set({\n        DisplayName,\n        email,\n        CreatedAt\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/Dangolden/Desktop/crown/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","UserprofileDocument","userAuth","additionalData","userRef","firestore","doc","snapshot","get","exists","DisplayName","email","CreatedAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AASC,MAAMC,MAAM,GAAI;AACTC,EAAAA,MAAM,EAAE,yCADC;AAETC,EAAAA,UAAU,EAAE,+BAFH;AAGTC,EAAAA,WAAW,EAAE,sCAHJ;AAITC,EAAAA,SAAS,EAAE,eAJF;AAKTC,EAAAA,aAAa,EAAE,2BALN;AAMTC,EAAAA,iBAAiB,EAAE,aANV;AAOTC,EAAAA,KAAK,EAAE,0CAPE;AAQTC,EAAAA,aAAa,EAAE;AARN,CAAhB;AAWD,OAAO,MAAMC,mBAAmB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAkC;AACrE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAc,kBAAd,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAqB;AAEnB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBT,QAA7B;AACA,UAAM;AAACU,MAAAA;AAAD,QAAc,IAAIC,IAAJ,EAApB;;AAEA,QAAG;AACL,YAAMT,OAAO,CAACU,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA;AAHgB,OAAZ,CAAN;AAMG,KAPD,CAOC,OAAMG,KAAN,EAAY;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AAED;AACF;;AAED,SAAOd,OAAP;AACC,CAzBM;AA2BPb,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB;AAGA,OAAO,MAAM4B,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMf,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMgB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAKL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA9B;AAEP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n const config =  {\r\n        apiKey: \"AIzaSyARsRhlakmLrPjyD0MBNDo0k8g9RnxLcBk\",\r\n        authDomain: \"dangold-8c6de.firebaseapp.com\",\r\n        databaseURL: \"https://dangold-8c6de.firebaseio.com\",\r\n        projectId: \"dangold-8c6de\",\r\n        storageBucket: \"dangold-8c6de.appspot.com\",\r\n        messagingSenderId: \"65364318642\",\r\n        appId: \"1:65364318642:web:76895ace7334269c93ecab\",\r\n        measurementId: \"G-27G1Y6KHRN\"\r\n      };  \r\n\r\nexport const UserprofileDocument = async (userAuth, additionalData)=>{\r\nif(!userAuth) return;\r\n\r\nconst userRef = firestore.doc('user/323rvdvfxtr')\r\nconst snapshot = await userRef.get();\r\n\r\nif (!snapshot.exists){\r\n\r\n  const {DisplayName, email} = userAuth;\r\n  const {CreatedAt} = new Date();\r\n\r\n  try{\r\nawait userRef.set({\r\n  DisplayName,\r\n  email,\r\n  CreatedAt\r\n});\r\n\r\n  }catch(error){\r\n    console.log('error creating user', error.message)\r\n\r\n  }\r\n}\r\n\r\nreturn userRef;\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({prompt:'select_account'});\r\n\r\nexport const signInWithGoogle = ()=> auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}